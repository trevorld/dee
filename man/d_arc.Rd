% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/arc.r
\name{d_arc1}
\alias{d_arc1}
\alias{d_arc2}
\alias{d_arc3}
\alias{d_arc4}
\alias{d_arc12}
\alias{d_arc23}
\alias{d_arc34}
\alias{d_arc41}
\alias{d_arc123}
\alias{d_arc234}
\alias{d_arc341}
\alias{d_arc412}
\title{Elliptical arc path convenience wrapper}
\usage{
d_arc1(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL)
)

d_arc2(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL)
)

d_arc3(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL)
)

d_arc4(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL)
)

d_arc12(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL)
)

d_arc23(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL)
)

d_arc34(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL)
)

d_arc41(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL)
)

d_arc123(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL)
)

d_arc234(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL)
)

d_arc341(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL)
)

d_arc412(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL)
)
}
\arguments{
\item{y_top, x_right, y_bottom, x_left}{The most extreme x and y values of the quarter circular arc shape.}

\item{w}{The (stroke) width of the arc "line".}

\item{...}{Passed to \code{\link[=M]{M()}}, \code{\link[=A]{A()}}, and \code{\link[=L]{L()}}.}

\item{origin_at_bottom, height}{If \code{origin_at_bottom} is \code{TRUE} then
\code{y} (and any \code{y1} and \code{y2}) coordinates is transformed by
\code{height - y} for absolute coordinates and \code{-y} for relative coordinates.}
}
\value{
A \code{\link[=dee]{dee()}} object.
}
\description{
\code{d_arc1()} \code{d_arc2()}, \code{d_arc3()}, \code{d_arc4()},
\code{d_arc12()}, \code{d_arc23()}, \code{d_arc34()}, \code{d_arc41()},
\code{d_arc123()}, \code{d_arc234()}, \code{d_arc341()}, and \code{d_arc412()}
are wrappers to create elliptical arc paths.
They are vectorized in their \code{y_top}, \code{x_right}, \code{y_bottom}, \code{x_left},
and \code{w} arguments.
The numbers after \code{d_arc} refer to the quadrants of a unit circle (in counterclockwise order).
and give an indication of what the shape of the arc looks like.
}
\examples{
d_1 <- d_arc1(2, 8, 8, 2, 1)
if (requireNamespace("omsvg", quietly = TRUE) &&
    requireNamespace("svgparser", quietly = TRUE)) {
  plot(d_1, height = 10, width = 10,
       fill = "red", stroke = "black", stroke_width = 4)
}
d_2 <- d_arc2(2, 8, 8, 2, 1)
if (requireNamespace("omsvg", quietly = TRUE) &&
    requireNamespace("svgparser", quietly = TRUE)) {
  plot(d_2, height = 10, width = 10,
       fill = "red", stroke = "black", stroke_width = 4)
}
d_34 <- d_arc34(2, 8, 8, 2, 1)
if (requireNamespace("omsvg", quietly = TRUE) &&
    requireNamespace("svgparser", quietly = TRUE)) {
  plot(d_34, height = 10, width = 10,
       fill = "red", stroke = "black", stroke_width = 4)
}
d_412 <- d_arc412(2, 8, 8, 2, 1)
if (requireNamespace("omsvg", quietly = TRUE) &&
    requireNamespace("svgparser", quietly = TRUE)) {
  plot(d_412, height = 10, width = 10,
       fill = "red", stroke = "black", stroke_width = 4)
}
}
\seealso{
\code{\link[=d_fslash]{d_fslash()}} and \code{\link[=d_bslash]{d_bslash()}}
}

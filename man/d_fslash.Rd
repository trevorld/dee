% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/slash.r
\name{d_fslash}
\alias{d_fslash}
\alias{d_bslash}
\title{Forward/backward slash path convenience wrapper}
\usage{
d_fslash(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL),
  nib = c("horizontal", "diagonal", "square", "vertical"),
  left = nib,
  right = nib
)

d_bslash(
  y_top,
  x_right,
  y_bottom,
  x_left,
  w,
  ...,
  origin_at_bottom = getOption("dee.origin_at_bottom", FALSE),
  height = getOption("dee.height", NULL),
  nib = c("horizontal", "diagonal", "square", "vertical"),
  left = nib,
  right = nib
)
}
\arguments{
\item{y_top, x_right, y_bottom, x_left}{The most extreme x and y values of the slash shape.}

\item{w}{The (stroke) width of the slash "line".}

\item{...}{Passed to \code{\link[=MZ]{MZ()}}.}

\item{origin_at_bottom, height}{If \code{origin_at_bottom} is \code{TRUE} then
\code{y} (and any \code{y1} and \code{y2}) coordinates is transformed by
\code{height - y} for absolute coordinates and \code{-y} for relative coordinates.}

\item{nib, left, right}{The shape of the "nib" tracing the line.
This only affects the left and right ends.}
}
\description{
\code{d_fslash()} is a wrapper around \code{MZ()} to create
a forward slash path convenience wrapper.
\code{d_bslash()} is a wrapper around \code{MZ()} to create
a backward slash path convenience wrapper.
They are vectorized in their \code{y_top}, \code{x_right}, \code{y_bottom}, \code{x_left},
and \code{w} arguments.
}
\examples{
d_h <- d_fslash(2, 8, 8, 2, 1)
if (requireNamespace("omsvg", quietly = TRUE) &&
    requireNamespace("svgparser", quietly = TRUE)) {
  plot(d_h, height = 10, width = 10,
       fill = "red", stroke = "black", stroke_width = 4)
}
d_s <- d_bslash(2, 8, 8, 2, 1, nib = "square")
if (requireNamespace("omsvg", quietly = TRUE) &&
    requireNamespace("svgparser", quietly = TRUE)) {
  plot(d_s, height = 10, width = 10,
       fill = "red", stroke = "black", stroke_width = 4)
}
d_v <- d_fslash(2, 8, 8, 2, 1, nib = "vertical")
if (requireNamespace("omsvg", quietly = TRUE) &&
    requireNamespace("svgparser", quietly = TRUE)) {
  plot(d_v, height = 10, width = 10,
       fill = "red", stroke = "black", stroke_width = 4)
}
d_d <- d_bslash(2, 8, 8, 2, 1, nib = "diagonal")
if (requireNamespace("omsvg", quietly = TRUE) &&
    requireNamespace("svgparser", quietly = TRUE)) {
  plot(d_d, height = 10, width = 10,
       fill = "red", stroke = "black", stroke_width = 4)
}
}
